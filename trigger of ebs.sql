--在 EBS 的数据库中添加,APPS用户添加
--该触发器主要是，当用户在EBS中添加合同的协助小组的成员，将重新设置该合同下的所有文件相对应的权限。
--DROP TRIGGER CUS_LIMITS_ADDUSER_ZB
--SELECT * FROM all_triggers WHERE table_name = 'PON_NEG_TEAM_MEMBERS';
CREATE OR REPLACE TRIGGER CUS_LIMITS_ADDUSER_ZB
  AFTER INSERT ON APPS.PON_NEG_TEAM_MEMBERS
  FOR EACH ROW
DECLARE
  MYCOUNT INT;
BEGIN
  SELECT COUNT(1)
    INTO MYCOUNT
    FROM DEV1_OCS.AFOBJECTS@TO_ECM_DEV T,
         DEV1_OCS.REVISIONS@TO_ECM_DEV R,
         DEV1_OCS.DOCMETA@TO_ECM_DEV   D
   WHERE T.DDOCNAME = R.DDOCNAME
     AND D.DID = R.DID
     AND T.DAFBUSINESSOBJECTTYPE = 'PON_AUCTION_HEADERS_ALL'
     AND T.DAFBUSINESSOBJECT = :NEW.AUCTION_HEADER_ID;
  IF MYCOUNT > 0 THEN
    MYCOUNT := APPS.CUX_QX_ECMLIMITS_PKG.CUS_FUNC_UPDATE_LIMITSUSER(:NEW.AUCTION_HEADER_ID,
                                                :NEW.USER_ID);
  END IF;
END;
/
--在ebs的数据库中添加,APPS
--2.1该触发器主要是，当用户在EBS中“删除”合同的协助小组的成员，将重新设置该合同下的所有文件相对应的权限。
--DROP TRIGGER  CUS_LIMITS_DELUSER_ZB
CREATE OR REPLACE TRIGGER CUS_LIMITS_DELUSER_ZB
  BEFORE DELETE ON APPS.PON_NEG_TEAM_MEMBERS
  FOR EACH ROW
DECLARE
  MYCOUNT INT;
BEGIN
  SELECT COUNT(1)
    INTO MYCOUNT
    FROM DEV1_OCS.AFOBJECTS@TO_ECM_DEV T,
         DEV1_OCS.REVISIONS@TO_ECM_DEV R,
         DEV1_OCS.DOCMETA@TO_ECM_DEV   D
   WHERE T.DDOCNAME = R.DDOCNAME
     AND D.DID = R.DID
     AND T.DAFBUSINESSOBJECTTYPE = 'PON_AUCTION_HEADERS_ALL'
     AND T.DAFBUSINESSOBJECT = :OLD.AUCTION_HEADER_ID;
  IF MYCOUNT > 0 THEN
    MYCOUNT := APPS.CUX_QX_ECMLIMITS_PKG.CUS_FUNC_DELETE_LIMITSUSER(:OLD.AUCTION_HEADER_ID,
                                                :OLD.USER_ID);
  END IF;
END;
/
--------合同请求多人时，权限的同步--------------
--SELECT * FROM all_triggers s WHERE s.table_name = 'WF_COMMENTS' ;
--DROP TRIGGER CUS_TRIGGER_LIMITS_HT;
CREATE OR REPLACE TRIGGER CUS_TRIGGER_LIMITS_HT
  BEFORE INSERT ON APPS.WF_COMMENTS
  FOR EACH ROW
WHEN (NEW.ACTION_TYPE = 'SEND')
DECLARE
  MYCOUNT   INT;
  DOCM_TYPE VARCHAR2(120);
  MY_ID     VARCHAR2(120);
  USER_NAME VARCHAR2(120);
BEGIN
  SELECT S.MESSAGE_TYPE
    INTO DOCM_TYPE
    FROM APPS.WF_NOTIFICATIONS S
   WHERE :NEW.NOTIFICATION_ID = S.NOTIFICATION_ID
     AND ROWNUM = 1;

  IF DOCM_TYPE = 'POAPPRV' THEN
     USER_NAME := :NEW.TO_ROLE ;
  
    SELECT PHA.PO_HEADER_ID
      INTO MY_ID
      FROM APPS.WF_MESSAGE_ATTRIBUTES_VL   MSGATTRIBSEO,
           APPS.WF_NOTIFICATION_ATTRIBUTES NTFATTRIBSEO,
           APPS.WF_NOTIFICATIONS           NTFEO,
           PO.PO_HEADERS_ALL               PHA
     WHERE (MSGATTRIBSEO.NAME = NTFATTRIBSEO.NAME)
       AND (NTFATTRIBSEO.NOTIFICATION_ID = NTFEO.NOTIFICATION_ID)
       AND NTFATTRIBSEO.NOTIFICATION_ID = :NEW.NOTIFICATION_ID
       AND PHA.SEGMENT1 = NTFATTRIBSEO.TEXT_VALUE
       AND (NTFEO.NOTIFICATION_ID = NTFATTRIBSEO.NOTIFICATION_ID AND
           NTFEO.MESSAGE_TYPE = MSGATTRIBSEO.MESSAGE_TYPE AND
           NTFEO.MESSAGE_NAME = MSGATTRIBSEO.MESSAGE_NAME AND
           MSGATTRIBSEO.NAME = NTFATTRIBSEO.NAME AND
           MSGATTRIBSEO.NAME = 'DOCUMENT_NUMBER');
 
         UPDATE DEV1_OCS.DOCMETA@TO_ECM_DEV A
            SET A.XCLBRAUSERLIST = A.XCLBRAUSERLIST ||
                                   DECODE(A.XCLBRAUSERLIST,
                                          '',
                                          '&&' || USER_NAME || '(RWDA)',
                                          DECODE(INSTR(A.XCLBRAUSERLIST,
                                                       USER_NAME),
                                                 0,
                                                 ',&&' || USER_NAME || '(RWDA)',
                                                 ''))
          WHERE EXISTS (SELECT 1
                   FROM DEV1_OCS.REVISIONS@TO_ECM_DEV REV,
                        DEV1_OCS.AFOBJECTS@TO_ECM_DEV AFO
                  WHERE REV.DDOCNAME = AFO.DDOCNAME
                    AND AFO.DAFBUSINESSOBJECT = MY_ID
                    AND AFO.DAFBUSINESSOBJECTTYPE = 'PO_HEADERS_MERGE_V'
                    AND (A.DID = REV.DID OR A.XMARKUP_BASEDID = REV.DID));
  END IF;
  Exception WHEN OTHERS THEN 
     NULL;
END;
/
--合同转发时，添加人员的权限到附件中,ebs中添加,apps
--DROP TRIGGER  CUS_LIMITS_ADDUSER_HT;
CREATE OR REPLACE TRIGGER CUS_LIMITS_ADDUSER_HT
  BEFORE INSERT ON PO.PO_ACTION_HISTORY
  FOR EACH ROW
DECLARE
  MYCOUNT   INT;
  USER_NAME VARCHAR2(120);
  MY_ID     VARCHAR2(120);
BEGIN

  SELECT COUNT(1)
    INTO MYCOUNT
    FROM DEV1_OCS.AFOBJECTS@TO_ECM_DEV AFO
   WHERE AFO.DAFBUSINESSOBJECTTYPE = 'PO_HEADERS_MERGE_V'
     AND AFO.DAFBUSINESSOBJECT = :NEW.OBJECT_ID;

  IF MYCOUNT > 0 THEN
  
    SELECT upper(PUI.USER_NAME)
      INTO USER_NAME
      FROM APPS.PON_USER_INFO_V PUI
     WHERE :NEW.EMPLOYEE_ID = PUI.PERSON_ID;
  
    UPDATE DEV1_OCS.DOCMETA@TO_ECM_DEV A
       SET A.XCLBRAUSERLIST = A.XCLBRAUSERLIST ||
                              DECODE(A.XCLBRAUSERLIST,
                                     '',
                                     '&&' || USER_NAME ||'(RWDA)',
                                     DECODE(INSTR(A.XCLBRAUSERLIST, USER_NAME),
                                            0,
                                            ',&&' || USER_NAME || '(RWDA)',
                                            ''))
     WHERE EXISTS (SELECT 1
              FROM DEV1_OCS.REVISIONS@TO_ECM_DEV REV,
                   DEV1_OCS.AFOBJECTS@TO_ECM_DEV AFO
             WHERE REV.DDOCNAME = AFO.DDOCNAME
               AND AFO.DAFBUSINESSOBJECT = :NEW.OBJECT_ID
               AND AFO.DAFBUSINESSOBJECTTYPE = 'PO_HEADERS_MERGE_V'
               AND (A.DID = REV.DID OR A.XMARKUP_BASEDID = REV.DID));
  END IF;
END;
/
--决标提交时，添加人员的权限到附件中,ebs中添加,apps
--DROP TRIGGER  CUS_LIMITS_ADDUSER_JB;
CREATE OR REPLACE TRIGGER CUS_LIMITS_ADDUSER_JB
  BEFORE INSERT ON APPS.PON_ACTION_HISTORY
  FOR EACH ROW
DECLARE
  MYCOUNT   INT;
  USER_NAME VARCHAR2(120);
  MY_ID     VARCHAR2(120);
BEGIN
  IF :NEW.OBJECT_TYPE_CODE = 'NEGOTIATION_AWARD' AND
     :NEW.ACTION_USER_ID <> '0' AND
     :NEW.ACTION_TYPE = 'AWARD_APPROVAL_PENDING' THEN
  
    SELECT US.USER_NAME
      INTO USER_NAME
      FROM APPS.FND_USER US
     WHERE US.USER_ID = :NEW.ACTION_USER_ID;
  
    IF USER_NAME IS NOT NULL THEN
    
      UPDATE DEV1_OCS.DOCMETA@TO_ECM_DEV A
         SET A.XCLBRAUSERLIST = A.XCLBRAUSERLIST ||
                                DECODE(A.XCLBRAUSERLIST,
                                       '',
                                       '&&' || USER_NAME || '(RWDA)',
                                       DECODE(INSTR(A.XCLBRAUSERLIST,
                                                    USER_NAME),
                                              0,
                                              ',&&' || USER_NAME || '(RWDA)',
                                              ''))
       WHERE A.XECMTEST = 'juebiao' AND EXISTS
       (SELECT 1
                FROM DEV1_OCS.REVISIONS@TO_ECM_DEV REV,
                     DEV1_OCS.AFOBJECTS@TO_ECM_DEV AFO
               WHERE REV.DDOCNAME = AFO.DDOCNAME
                 AND AFO.DAFBUSINESSOBJECT = :NEW.OBJECT_ID
                 AND AFO.DAFBUSINESSOBJECTTYPE = 'PON_AUCTION_HEADERS_ALL'
                 AND (A.DID = REV.DID OR A.XMARKUP_BASEDID = REV.DID));
    
    END IF;
  END IF;
END;
/
--招标发布时，添加供应商的权限到附件中,ebs中添加,apps
--回标解锁时，添加相关人员的权限到附件中。
--DROP TRIGGER CUS_LIMITS_UPPSUPP_ZB;
CREATE OR REPLACE TRIGGER CUS_LIMITS_UPPSUPP_ZB
  BEFORE UPDATE ON APPS.PON_AUCTION_HEADERS_ALL
  FOR EACH ROW
DECLARE
  MYCOUNT INT;
BEGIN
  IF :NEW.AUCTION_STATUS = 'ACTIVE' THEN
    MYCOUNT := APPS.CUX_QX_ECMLIMITS_PKG.CUS_FUNC_LIMITS_UPDATE_ZB(:NEW.AUCTION_HEADER_ID);
  END IF;
  IF :NEW.SEALED_AUCTION_STATUS = 'UNLOCKED' THEN
    MYCOUNT := APPS.CUX_QX_ECMLIMITS_PKG.CUS_FUNC_LIMITS_UPDATE_HB(:NEW.AUCTION_HEADER_ID);
  END IF;
END;
/
---招标已发布，添加供应商时，立即添加相对应的人员,ebs中添加,apps
--SELECT * FROM all_triggers s WHERE s.table_name = 'PON_BIDDING_PARTIES' ;
--DROP TRIGGER CUS_LIMITS_ADDSUPP_ZB;
CREATE OR REPLACE TRIGGER CUS_LIMITS_ADDSUPP_ZB
  BEFORE INSERT ON APPS.PON_BIDDING_PARTIES
  FOR EACH ROW
DECLARE
  MYCOUNT   INT;
  USER_NAME VARCHAR2(120);
  MY_ID     VARCHAR2(120);
BEGIN
  SELECT US.USER_NAME
    INTO USER_NAME
    FROM APPS.FND_USER US
   WHERE US.CUSTOMER_ID = :NEW.TRADING_PARTNER_CONTACT_ID;

  IF USER_NAME IS NOT NULL THEN
  
    UPDATE DEV1_OCS.DOCMETA@TO_ECM_DEV A
       SET A.XCLBRAUSERLIST = A.XCLBRAUSERLIST ||
                              DECODE(A.XCLBRAUSERLIST,
                                     '',
                                     '&&' || USER_NAME || '(RWDA)',
                                     DECODE(INSTR(A.XCLBRAUSERLIST, USER_NAME),
                                            0,
                                            ',&&' || USER_NAME || '(RWDA)',
                                            ''))
     WHERE EXISTS
     (SELECT 1
              FROM DEV1_OCS.REVISIONS@TO_ECM_DEV REV,
                   DEV1_OCS.AFOBJECTS@TO_ECM_DEV AFO
             WHERE REV.DDOCNAME = AFO.DDOCNAME
               AND AFO.DAFBUSINESSOBJECT = :NEW.AUCTION_HEADER_ID
               AND AFO.DAFBUSINESSOBJECTTYPE = 'PON_AUCTION_HEADERS_ALL'
               AND (A.DID = REV.DID OR A.XMARKUP_BASEDID = REV.DID))
       AND EXISTS
     (SELECT 1
              FROM FND_FLEX_VALUE_SETS FVS, FND_FLEX_VALUES FFV
             WHERE FVS.FLEX_VALUE_SET_NAME = 'QX_JOB_DOC_TYPE'
               AND FVS.FLEX_VALUE_SET_ID = FFV.FLEX_VALUE_SET_ID
               AND FFV.PARENT_FLEX_VALUE_LOW = '供应商'
               AND FFV.ENABLED_FLAG = 'Y'
               AND FFV.FLEX_VALUE = A.XECMTEST)
       AND EXISTS
     (SELECT 1
              FROM APPS.PON_AUCTION_HEADERS_ALL PAH
             WHERE PAH.AUCTION_STATUS <> 'DRAFT'
               AND PAH.AUCTION_HEADER_ID = :NEW.AUCTION_HEADER_ID);
  
  END IF;
END;
/
---把通知信息插入或者更新到待发送到webService的表中
--SELECT * FROM CUS_QX_SEND_NOTIFICATION FOR UPDATE ;
--DROP TABLE CUS_QX_SEND_NOTIFICATION;
CREATE TABLE CUS_QX_SEND_NOTIFICATION
(
 guid NUMBER PRIMARY KEY,
 status VARCHAR2(8),
 sendstatus VARCHAR2(20)
)

CREATE OR REPLACE TRIGGER CUS_QX_SEND_NOTIFICATION_I
  AFTER INSERT ON APPS.WF_NOTIFICATIONS
  FOR EACH ROW
BEGIN

  INSERT INTO APPS.CUS_QX_SEND_NOTIFICATION
    (GUID, STATUS, SENDSTATUS)
  VALUES
    (:NEW.NOTIFICATION_ID, :NEW.STATUS, 'PENDING');

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
/
CREATE OR REPLACE TRIGGER CUS_QX_SEND_NOTIFICATION_U
  AFTER UPDATE ON APPS.WF_NOTIFICATIONS
  FOR EACH ROW
  WHEN (NEW.STATUS = 'CLOSED')
BEGIN

  UPDATE APPS.CUS_QX_SEND_NOTIFICATION A
     SET A.STATUS = 'CLOSED', A.SENDSTATUS = 'PENDING'
   WHERE A.GUID = :NEW.NOTIFICATION_ID;

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
/
---*******************更新供应商的Email************************
CREATE OR REPLACE TRIGGER CUS_QX_SUPPLIER_EMAIL
  AFTER UPDATE ON APPS.AP_SUPPLIERS
  FOR EACH ROW
  WHEN (NEW.ATTRIBUTE12 = '是' OR NEW.ATTRIBUTE12 = '否')
DECLARE
  temp NUMBER;
BEGIN

  NULL;

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
